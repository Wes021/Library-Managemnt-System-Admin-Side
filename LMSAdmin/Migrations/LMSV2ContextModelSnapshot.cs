// <auto-generated />
using System;
using LMSAdmin.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSAdmin.Migrations
{
    [DbContext(typeof(LMSV2Context))]
    partial class LMSV2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMSAdmin.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserStatusId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LMSAdmin.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<string>("BookTitle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<int>("Category")
                        .HasColumnType("int")
                        .HasColumnName("category");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<decimal?>("FineRate")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("fine_rate");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<int>("Isbn")
                        .HasColumnType("int")
                        .HasColumnName("ISBN");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("TotalCopies")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("total_copies");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("BookId")
                        .HasName("PK__books__490D1AE11A304099");

                    b.HasIndex("Category");

                    b.HasIndex("Language");

                    b.HasIndex("Status");

                    b.HasIndex(new[] { "Isbn" }, "UQ__books__447D36EA5D91AC9F")
                        .IsUnique();

                    b.HasIndex(new[] { "BookId" }, "UQ__books__490D1AE01EB7F207")
                        .IsUnique();

                    b.ToTable("books");
                });

            modelBuilder.Entity("LMSAdmin.Models.BookStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("BookStatusN")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Book_statusN");

                    b.HasKey("StatusId")
                        .HasName("PK__Book_sta__3683B53106A89BAB");

                    b.HasIndex(new[] { "BookStatusN" }, "UQ__Book_sta__1BBF736C931370F5")
                        .IsUnique();

                    b.HasIndex(new[] { "StatusId" }, "UQ__Book_sta__3683B530CDFF0794")
                        .IsUnique();

                    b.ToTable("Book_status");
                });

            modelBuilder.Entity("LMSAdmin.Models.BorrowStatus", b =>
                {
                    b.Property<int>("BorrowStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("borrow_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowStatusId"));

                    b.Property<string>("BorrowStatus1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("borrow_status");

                    b.HasKey("BorrowStatusId")
                        .HasName("PK__borrow_s__A58A5F8EDFE5C57C");

                    b.HasIndex(new[] { "BorrowStatus1" }, "UQ__borrow_s__98D7B8E21AB4EEE2")
                        .IsUnique();

                    b.HasIndex(new[] { "BorrowStatusId" }, "UQ__borrow_s__A58A5F8F0AFD67AB")
                        .IsUnique();

                    b.ToTable("borrow_status");
                });

            modelBuilder.Entity("LMSAdmin.Models.Borrowing", b =>
                {
                    b.Property<int>("BorrowId")
                        .HasColumnType("int")
                        .HasColumnName("borrow_id");

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("BorrowStatusId")
                        .HasColumnType("int")
                        .HasColumnName("borrow_status_id");

                    b.Property<DateTime?>("BorrowedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("borrowed_at");

                    b.Property<decimal>("FineAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("fine_amount");

                    b.Property<DateTime?>("ReturnAt")
                        .HasColumnType("datetime")
                        .HasColumnName("return_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("BorrowId")
                        .HasName("PK__borrowin__262B57A0036DCA5E");

                    b.HasIndex("BorrowStatusId");

                    b.HasIndex(new[] { "BorrowId" }, "UQ__borrowin__262B57A1A3F5D613")
                        .IsUnique();

                    b.HasIndex(new[] { "BookId" }, "UQ__borrowin__490D1AE003E79D9E")
                        .IsUnique();

                    b.HasIndex(new[] { "UserId" }, "UQ__borrowin__B9BE370EB5727638")
                        .IsUnique();

                    b.ToTable("borrowing");
                });

            modelBuilder.Entity("LMSAdmin.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryN")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryN");

                    b.HasKey("CategoryId")
                        .HasName("PK__category__D54EE9B43055B0F8");

                    b.HasIndex(new[] { "CategoryId" }, "UQ__category__D54EE9B537B6F6A3")
                        .IsUnique();

                    b.ToTable("category");
                });

            modelBuilder.Entity("LMSAdmin.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("language_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("LanguageN")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("languageN");

                    b.HasKey("LanguageId")
                        .HasName("PK__Language__804CF6B3C3083BE2");

                    b.HasIndex(new[] { "LanguageN" }, "UQ__Language__7163493D16205E65")
                        .IsUnique();

                    b.HasIndex(new[] { "LanguageId" }, "UQ__Language__804CF6B2FE1444C2")
                        .IsUnique();

                    b.ToTable("Language");
                });

            modelBuilder.Entity("LMSAdmin.Models.UserStatus", b =>
                {
                    b.Property<int>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserStatusId"));

                    b.Property<string>("UserStatus1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_status");

                    b.HasKey("UserStatusId")
                        .HasName("PK__user_sta__8E5BDDEF567CFF03");

                    b.HasIndex(new[] { "UserStatusId" }, "UQ__user_sta__8E5BDDEE000DE96E")
                        .IsUnique();

                    b.ToTable("user_status");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LMSAdmin.Models.ApplicationUser", b =>
                {
                    b.HasOne("LMSAdmin.Models.UserStatus", null)
                        .WithMany("Users")
                        .HasForeignKey("UserStatusId");
                });

            modelBuilder.Entity("LMSAdmin.Models.Book", b =>
                {
                    b.HasOne("LMSAdmin.Models.Category", "CategoryNavigation")
                        .WithMany("Books")
                        .HasForeignKey("Category")
                        .IsRequired()
                        .HasConstraintName("books_fk5");

                    b.HasOne("LMSAdmin.Models.Language", "LanguageNavigation")
                        .WithMany("Books")
                        .HasForeignKey("Language")
                        .IsRequired()
                        .HasConstraintName("books_fk3");

                    b.HasOne("LMSAdmin.Models.BookStatus", "StatusNavigation")
                        .WithMany("Books")
                        .HasForeignKey("Status")
                        .IsRequired()
                        .HasConstraintName("books_fk7");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("LanguageNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("LMSAdmin.Models.Borrowing", b =>
                {
                    b.HasOne("LMSAdmin.Models.Book", "Book")
                        .WithOne("Borrowing")
                        .HasForeignKey("LMSAdmin.Models.Borrowing", "BookId")
                        .IsRequired()
                        .HasConstraintName("borrowing_fk2");

                    b.HasOne("LMSAdmin.Models.BorrowStatus", "BorrowStatus")
                        .WithMany("Borrowings")
                        .HasForeignKey("BorrowStatusId")
                        .IsRequired()
                        .HasConstraintName("borrowing_fk5");

                    b.HasOne("LMSAdmin.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("borrowing_fk1");

                    b.Navigation("Book");

                    b.Navigation("BorrowStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LMSAdmin.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LMSAdmin.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSAdmin.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LMSAdmin.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMSAdmin.Models.Book", b =>
                {
                    b.Navigation("Borrowing");
                });

            modelBuilder.Entity("LMSAdmin.Models.BookStatus", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LMSAdmin.Models.BorrowStatus", b =>
                {
                    b.Navigation("Borrowings");
                });

            modelBuilder.Entity("LMSAdmin.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LMSAdmin.Models.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LMSAdmin.Models.UserStatus", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
